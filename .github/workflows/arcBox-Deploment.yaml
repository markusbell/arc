name: Bells ArcBox Deployment via GitHub Actions

on:
  workflow_dispatch:
    inputs:
      flavor:
        type: choice
        description: "ArcBox flavor to deploy"
        required: true
        options:
          - ITPro
      mechanism:
        type: choice
        description: "Deployment option"
        required: true
        options:
          - ARM
          - Bicep
          - Terraform

jobs:
  deployArcBox:
    runs-on: ubuntu-latest
    env:
      MECHANISM: ARM 
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      SPN_CLIENT_ID: ${{ secrets.SPN_CLIENT_ID }}
      SPN_CLIENT_SECRET: ${{ secrets.SPN_CLIENT_SECRET }}
      SPN_TENANT_ID: ${{ secrets.SPN_TENANT_ID }}
      SPN_SUBSCRIPTION_ID: ${{ secrets.SPN_SUBSCRIPTION_ID }}
      WINDOWS_ADMIN_PASSWORD: ${{ secrets.WINDOWS_ADMIN_PASSWORD }}
      SSH_RSA_PUBLIC_KEY: ${{ secrets.SSH_RSA_PUBLIC_KEY }}
      SUBSCRIPTION_SHORTNAME: ${{ secrets.SUBSCRIPTION_SHORTNAME }}
      LOCATION_ID: ${{ secrets.LOCATION_ID }}
      ARC_NAME: ${{ secrets.ARC_NAME }}
      FLAVOR: ${{ secrets.FLAVOUR }}
      LOCATION: ${{ secrets.AZURE_LOCATION }}
      RG_NAME: ${{ secrets.AZURE_RESOURCEGROUP }}
      WINDOWS_ADMIN_USER: bellsadmin

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.githubBranch }}

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy ArcBox - ARM
        if: ${{ github.event.inputs.mechanism == 'ARM' }}
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az group create --name $RG_NAME --location $LOCATION
            az deployment group create -g $RG_NAME -f "azure_jumpstart_arcbox/ARM/azuredeploy.json" \
              -p sshRSAPublicKey="$SSH_RSA_PUBLIC_KEY" \
                 windowsAdminUsername="$WINDOWS_ADMIN_USER" \
                 windowsAdminPassword="$WINDOWS_ADMIN_PASSWORD" \
                 logAnalyticsWorkspaceName="${SUBSCRIPTION_SHORTNAME}-${LOCATION_ID}-${ARC_NAME}-LA" \
                 flavor="$FLAVOR" \
                 githubAccount="${GITHUB_REPOSITORY_OWNER}" \
                 githubBranch="${GITHUB_REF##*/}" \
                 deployBastion=false

      - name: Deploy ArcBox - Bicep
        if: ${{ github.event.inputs.mechanism == 'Bicep' }}
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az group create --name $RG_NAME --location $LOCATION
            az deployment group create -g $RG_NAME -f "azure_jumpstart_arcbox/bicep/main.bicep" \
              -p sshRSAPublicKey="$SSH_RSA_PUBLIC_KEY" \
                 windowsAdminUsername="$WINDOWS_ADMIN_USER" \
                 windowsAdminPassword="$WINDOWS_ADMIN_PASSWORD" \
                 logAnalyticsWorkspaceName="${SUBSCRIPTION_SHORTNAME}-${LOCATION_ID}-${ARC_NAME}-LA" \
                 flavor="$FLAVOR" \
                 githubAccount="${GITHUB_REPOSITORY_OWNER}" \
                 githubBranch="${GITHUB_REF##*/}" \
                 deployBastion=false

      - name: Deploy ArcBox - Terraform
        if: ${{ github.event.inputs.mechanism == 'Terraform' }}
        run: |
          chmod +x ./tests/TerraformDeploy.sh
          ./tests/TerraformDeploy.sh ./azure_jumpstart_arcbox/terraform \
            "$RG_NAME" "$LOCATION" "$SPN_CLIENT_ID" "$SPN_CLIENT_SECRET" "$SPN_TENANT_ID" \
            "$SSH_RSA_PUBLIC_KEY" "$WINDOWS_ADMIN_USER" "$WINDOWS_ADMIN_PASSWORD" \
            "$FLAVOR" "${SUBSCRIPTION_SHORTNAME}${LOCATION_ID}${ARC_NAME}la" \
            "${GITHUB_REPOSITORY_OWNER}" "${GITHUB_REF##*/}" false "$SPN_SUBSCRIPTION_ID"

      - name: Install OpenSSH + SSH Tools
        run: |
          sudo apt-get update
          sudo apt-get -y install putty-tools sshpass

      - name: Add NSG Rule for SSH
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az network nsg rule create -g $RG_NAME --nsg-name 'ArcBox-NSG' -n 'AllowOpenSsh' \
              --source-port-ranges '*' --source-address-prefixes '*' \
              --priority 1100 --destination-address-prefixes '*' \
              --destination-port-ranges '2204' --direction Inbound \
              --access Allow --protocol Tcp --description "Allow Open SSH"

      - name: Open SSH & Run Logon Scripts
        run: |
          VM_IP=$(az vm show -d -g $RG_NAME -n ArcBox-Client --query publicIps -o tsv)
          plink -ssh -P 2204 $WINDOWS_ADMIN_USER@$VM_IP -pw $WINDOWS_ADMIN_PASSWORD -batch 'powershell -InputFormat None -F C:\ArcBox\GHActionDeploy.ps1'

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ArcBox-Logs
          path: ./azure_jumpstart_arcbox/artifacts/**
          if-no-files-found: error

      - name: Upload bootstrap script
        uses: actions/upload-artifact@v4
        with:
          name: bootstrap
          path: ./azure_jumpstart_arcbox/artifacts/Bootstrap.ps1